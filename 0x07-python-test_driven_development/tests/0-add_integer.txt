The ``0-add_integer`` module
==========================

Using ``add_integer``
---------------------

>>> add_integer = __import__('0-add_integer').add_integer

Now Testing:

    >>> add_integer(1, 2)
    3

    >>> add_integer(-1, 5)
    4

    >>> add_integer(2.2, 2.2)
    4

    >>> add_integer("2", 2)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, "2")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer("S")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer("hello", "hello")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, float("inf"))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(5, float("nan"))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(2)
    100
